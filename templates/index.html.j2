<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Advanced AI Voice Synthesizer</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.min.js"></script>
</head>
<body>
<div class="container mt-5">
  <h2>Advanced Text-Based AI Voice Synthesizer</h2>
  <form method="POST">
    <div class="form-group">
      <label for="lyrics">Enter your text:</label>
      <textarea id="lyrics" name="lyrics" class="form-control" rows="5"></textarea>
    </div>
    <div class="form-group">
      <label>Select Voice:</label>
      <select name="voice" class="form-control">
        {% for voice in voices %}
        <option value="{{ voice.voice_id }}">{{ voice.name }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="form-group">
      <label for="emotionLevel">Select Emotion:</label>
      <select id="emotionLevel" name="emotionLevel" class="form-control">
        <option value="neutral" selected>Neutral</option>
        <option value="happy">Happy</option>
        <option value="sad">Sad</option>
        <option value="angry">Angry</option>
      </select>
    </div>
    <div class="form-group">
      <label for="pitch">Pitch (0.5 - 2.0):</label>
      <input type="number" id="pitch" name="pitch" class="form-control" step="0.1" value="1.0" min="0.5" max="2.0">
    </div>
    <div class="form-group">
      <label for="rate">Rate (0.5 - 2.0):</label>
      <input type="number" id="rate" name="rate" class="form-control" step="0.1" value="1.0" min="0.5" max="2.0">
    </div>
    <div class="form-group">
      <label for="audio_format">Audio Format:</label>
      <select id="audio_format" name="audio_format" class="form-control">
        <option value="mp3" selected>MP3</option>
        <option value="wav">WAV</option>
      </select>
    </div>
    <button class="btn btn-primary">Generate Audio</button>
  </form>

  <div class="mt-3">
    <div class="alert alert-info" id="status-message" style="display:none;"></div>
    <div class="text-muted" id="task-id-display" style="display:none;"></div>
  </div>

  <div id="audio-container" class="mt-3" style="display: none;">
    <audio controls>
      <source id="audio-source" type="audio/mpeg">
    </audio>
    <br>
    <a id="download-link" class="btn btn-success mt-2" download>‚¨áÔ∏è Download Audio</a>
    <a id="metrics-link" class="btn btn-outline-secondary mt-2" target="_blank" style="display:none;">üîç View Task Metrics</a>
  </div>
</div>

<script>
  const socket = io();
  socket.on('connect', () => console.log("Connected via Socket.IO"));

  {% if task_id %}
  const taskId = "{{ task_id }}";

  document.getElementById('status-message').style.display = 'block';
  document.getElementById('status-message').innerText = 'Task queued...';
  document.getElementById('task-id-display').style.display = 'block';
  document.getElementById('task-id-display').innerText = 'Tracking Task ID: ' + taskId;

  function checkTaskStatus() {
    fetch('/task_status/' + taskId)
      .then(r => r.json())
      .then(data => {
        const statusEl = document.getElementById('status-message');
        if (data.status === 'SUCCESS') {
          statusEl.innerText = 'Audio generated successfully!';
          const audioUrl = "/audio/" + encodeURIComponent(data.result);
          document.getElementById('audio-source').src = audioUrl;
          const dl = document.getElementById('download-link');
          dl.href = audioUrl;
          dl.innerText = 'Download ' + data.result;
          document.getElementById('audio-container').style.display = 'block';
          document.querySelector('audio').load();

          // show metrics link
          const m = document.getElementById('metrics-link');
          m.href = '/metrics/' + taskId;
          m.style.display = 'inline-block';
        }
        else if (data.status === 'FAILURE') {
          statusEl.innerText = 'Audio generation failed!';
        }
        else {
          setTimeout(checkTaskStatus, 1000);
        }
      });
  }

  checkTaskStatus();
  {% endif %}
</script>
</body>
</html>
